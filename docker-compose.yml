version: '3.8'

services:
  # Backend API Service
  backend:
    build: .
    container_name: sudarshanview-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_PATH=/app/database/sudarshanview.db
    volumes:
      - ./database:/app/database
      - ./logs:/app/logs
      - ./detections:/app/detections
    restart: unless-stopped
    depends_on:
      - postgres  # If using PostgreSQL

  # Frontend Service (React)
  frontend:
    image: node:18-alpine
    container_name: sudarshanview-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    command: >
      sh -c "
        npm install &&
        npm start
      "
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    depends_on:
      - backend

  # Computer Vision Service
  vision:
    build: .
    container_name: sudarshanview-vision
    command: python computer_vision/main.py
    environment:
      - DISPLAY=${DISPLAY:-:0}  # For GUI display if needed
    volumes:
      - ./config:/app/config
      - ./detections:/app/detections
      - /tmp/.X11-unix:/tmp/.X11-unix  # For X11 forwarding
    devices:
      - /dev/video0:/dev/video0  # Camera access
    restart: unless-stopped
    depends_on:
      - backend

  # PostgreSQL Database (optional)
  postgres:
    image: postgres:13
    container_name: sudarshanview-db
    environment:
      POSTGRES_DB: sudarshanview
      POSTGRES_USER: sudarshanview
      POSTGRES_PASSWORD: your_password_here
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: sudarshanview-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    restart: unless-stopped
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:

networks:
  default:
    name: sudarshanview-network
